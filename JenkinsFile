pipeline {
  /** ***************
   ** CONFIGURE AGENT
   ** **************/
  agent {
    node {
      // ** Set the node/agent our job should run on.
      label 'ecs_aws_instance'
    }
  }

  environment {
    // Load environment variables from properties file
    REPO = sh(script: 'grep REPO .properties | cut -d= -f2 | tr -d \'"\'', returnStdout: true).trim()
    TAG = sh(script: 'grep TAG .properties | cut -d= -f2 | tr -d \'"\'', returnStdout: true).trim()
    RELEASE = sh(script: 'grep RELEASE .properties | cut -d= -f2 | tr -d \'"\'', returnStdout: true).trim()
    VERSION = sh(script: 'grep VERSION .properties | cut -d= -f2 | tr -d \'"\'', returnStdout: true).trim()
  }

  /**
   * ## PIPELINE
   */
  stages {
    
    /** ***************
     ** ## CONFIG ENV
     * Here we will load the properties file. This injects the Key=Pair
     * as environment variables.
     ** **************/
    stage("Config ENV") {
      steps {
        // Print environment variables to verify they are set correctly
        sh 'echo "Repository: $REPO"'
        sh 'echo "Tag: $TAG"'
        sh 'echo "Release: $RELEASE"'
        sh 'echo "Version: $VERSION"'
      }
    }  // end stage  

    /** ***************
      ** ## Build game package
      ** **************/
    stage("Retrieve game package") {
      steps {
        sh 'echo $REPO'
        sh "wget ${REPO}/download/${RELEASE}/${TAG}-${VERSION}.zip"
        sh "unzip ${TAG}-${VERSION}.zip"
      }
    }  

    /** ***************
      ** ## Deploy game package
      ** **************/
    stage("Deploy game package") {
      steps {
        sh "cp -r ${TAG}-${VERSION} /var/www/html"
      }
    } 
  } 
}