pipeline {


  agent {
    node {
      // ** Set the node/agent our job should run on.
      label 'build_node'
    }
  }

  /**
   * ## PIPELINE
   */
  stages {

    // /** ***************
    //  ** ## Install dependencies
    //  ** **************/
    // stage("Install dependencies") {
    //   steps {
    //     // ** Run npm ci to install dependencies
    //     // ** If this fails, the build will fail
    //     catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
    //       pwsh '''
    //         npm ci
    //       '''
    //     }
    //   }
    // }

    // /** ***************
    //  ** ## Build game package
    //  ** **************/
    // stage("Build package") {
    //   steps {
    //     pwsh '''
    //       npm run build
    //     '''
    //   }
    // }
    
    /** ***************
     ** ## Upload package to server
     ** **************/
    stage("Upload package to server") {
      steps {
        pwsh '''
          Compress-Archive -Path ./dist/* -DestinationPath release.zip
        '''
        
        withCredentials([file(credentialsId: "game-launch-config.pem", variable: 'PEM_FILE')]) {
          pwsh '''
            scp -i $PEM_FILE release.zip ${env:AWS_USER}@${env:AWS_LINK}:/home/${env:AWS_USER} -v 
          '''
        }
      }
    }

    /** ***************
     ** ## Deploy game package
     ** **************/
    stage("Deploy game package") {

      agent {
        node {
          // ** Set the node/agent our job should run on.
          label 'ecs_aws_instance'
        }
      }

      steps {
        sh "sudo unzip -o ${TAG}-${VERSION}.zip -d /var/www/html"
      }
    } 
  } 
}